{
  "hash": "f38659c7df2fcf1d4363387e4947cfc9",
  "result": {
    "markdown": "---\ntitle: \"Inference\"\nformat:\n  revealjs:\n    scrollable: true\n    theme: [default, styles.scss]\n    navigation-mode: vertical\n    controls-layout: bottom-right\n    controls-tutorial: true\n    incremental: false \n    chalkboard:\n      src: notes/chalkboard_1a.json\n      storage: chalkboard_pres\n      theme: whiteboard\n      chalk-width: 4\nknitr:\n  opts_chunk: \n    echo: false\n    eval: true\n    message: false\n    warnings: false\n    comment: \"#>\" \n    error: true\n    \nrevealjs-plugins:\n  - pointer\n  - verticator\n  \nfilters: \n  - reveal-header\n  - code-fullscreen\n  - reveal-auto-agenda\n  \nauto-agenda:\n  bullets: numbered\n  heading: Learning Outcomes\n  \neditor: visual\n---\n\n\n\n\n# Inference\n\n## Motivating Example\n\n\n::: {.cell}\n::: {.cell-output .cell-output-error}\n```\n#> Error in ggplot(mtcars, aes(x = qsec, y = mpg)): could not find function \"ggplot\"\n```\n:::\n:::\n\n\n## Adding a Line\n\n\n::: {.cell}\n::: {.cell-output .cell-output-error}\n```\n#> Error in ggplot(mtcars, aes(x = qsec, y = mpg)): could not find function \"ggplot\"\n```\n:::\n:::\n\n\n\n## Linear Model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres <- mtcars %>% lm(mpg ~ qsec, data = .)\n```\n\n::: {.cell-output .cell-output-error}\n```\n#> Error in mtcars %>% lm(mpg ~ qsec, data = .): could not find function \"%>%\"\n```\n:::\n\n```{.r .cell-code}\nres\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> lm(formula = mpg ~ qsec, data = mtcars)\n#> \n#> Coefficients:\n#> (Intercept)         qsec  \n#>      -5.114        1.412\n```\n:::\n:::\n\n\n## Is there a linear relationship or due to random chance?\n\n## Inference\n\nThe process to determine if an estimate of a parameter is valuable or just due to random chance.\n\n## Randomness of Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars %>% gf_point(shuffle(mpg) ~ qsec) %>%\n  gf_theme(theme_bw()) %>%\n  gf_labs(x = \"Quarter Mile Time\", y = \"MPG\") %>%\n  gf_theme(axis.title = element_text(size = 24))\n```\n\n::: {.cell-output .cell-output-error}\n```\n#> Error in mtcars %>% gf_point(shuffle(mpg) ~ qsec) %>% gf_theme(theme_bw()) %>% : could not find function \"%>%\"\n```\n:::\n:::\n\n\n## Shuffled vs Empirical\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmtcars %>% gf_point(shuffle(mpg) ~ qsec) %>%\n  gf_point(mpg ~ qsec,\n             color = \"purple\", fill = \"red\") %>%\n  gf_theme(theme_bw()) %>%\n  gf_labs(x = \"Quarter Mile Time\", y = \"MPG\") %>%\n  gf_theme(axis.title = element_text(size = 24))\n```\n\n::: {.cell-output .cell-output-error}\n```\n#> Error in mtcars %>% gf_point(shuffle(mpg) ~ qsec) %>% gf_point(mpg ~ qsec, : could not find function \"%>%\"\n```\n:::\n:::\n\n\n## Obtaining b1\n\n\n::: {.cell}\n\n```{.r .cell-code}\nb1(shuffle(mpg) ~ qsec, data = mtcars)\n```\n\n::: {.cell-output .cell-output-error}\n```\n#> Error in b1(shuffle(mpg) ~ qsec, data = mtcars): could not find function \"b1\"\n```\n:::\n\n```{.r .cell-code}\nb1(shuffle(mpg) ~ qsec, data = mtcars)\n```\n\n::: {.cell-output .cell-output-error}\n```\n#> Error in b1(shuffle(mpg) ~ qsec, data = mtcars): could not find function \"b1\"\n```\n:::\n\n```{.r .cell-code}\nb1(shuffle(mpg) ~ qsec, data = mtcars)\n```\n\n::: {.cell-output .cell-output-error}\n```\n#> Error in b1(shuffle(mpg) ~ qsec, data = mtcars): could not find function \"b1\"\n```\n:::\n\n```{.r .cell-code}\nb1(shuffle(mpg) ~ qsec, data = mtcars)\n```\n\n::: {.cell-output .cell-output-error}\n```\n#> Error in b1(shuffle(mpg) ~ qsec, data = mtcars): could not find function \"b1\"\n```\n:::\n\n```{.r .cell-code}\nb1(shuffle(mpg) ~ qsec, data = mtcars)\n```\n\n::: {.cell-output .cell-output-error}\n```\n#> Error in b1(shuffle(mpg) ~ qsec, data = mtcars): could not find function \"b1\"\n```\n:::\n\n```{.r .cell-code}\nb1(shuffle(mpg) ~ qsec, data = mtcars)\n```\n\n::: {.cell-output .cell-output-error}\n```\n#> Error in b1(shuffle(mpg) ~ qsec, data = mtcars): could not find function \"b1\"\n```\n:::\n:::\n\n\n## Repeat it 10,000\n\n\n::: {.cell}\n\n```{.r .cell-code}\nb1_sim <- do(10000) * b1(shuffle(mpg) ~ qsec, \n                         data = mtcars)\n```\n\n::: {.cell-output .cell-output-error}\n```\n#> Error in do(10000): could not find function \"do\"\n```\n:::\n\n```{.r .cell-code}\nb1_sim\n```\n\n::: {.cell-output .cell-output-error}\n```\n#> Error in eval(expr, envir, enclos): object 'b1_sim' not found\n```\n:::\n:::\n\n\n## Distribution of $b_1$\n\nThe distribution of $b_1$ shows all the possible values that $b_1$ can take with their respective probabilities.\n\n## Distribution of $b_1$\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_histogram(~b1, data = b1_sim)\n```\n\n::: {.cell-output .cell-output-error}\n```\n#> Error in gf_histogram(~b1, data = b1_sim): could not find function \"gf_histogram\"\n```\n:::\n:::\n\n\n## Portioning the middle 95% the Distribution\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_histogram(~b1, data = b1_sim, fill = ~middle(b1, .95))\n```\n\n::: {.cell-output .cell-output-error}\n```\n#> Error in gf_histogram(~b1, data = b1_sim, fill = ~middle(b1, 0.95)): could not find function \"gf_histogram\"\n```\n:::\n:::\n\n\n## Portioning the lower 5% the Distribution\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_histogram(~b1, data = b1_sim, fill = ~lower(b1, .05))\n```\n\n::: {.cell-output .cell-output-error}\n```\n#> Error in gf_histogram(~b1, data = b1_sim, fill = ~lower(b1, 0.05)): could not find function \"gf_histogram\"\n```\n:::\n:::\n\n\n## Portioning the upper 5% the Distribution\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_histogram(~b1, data = b1_sim, fill = ~upper(b1, .95))\n```\n\n::: {.cell-output .cell-output-error}\n```\n#> Error in gf_histogram(~b1, data = b1_sim, fill = ~upper(b1, 0.95)): could not find function \"gf_histogram\"\n```\n:::\n:::\n\n\n## Middle 95%\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_histogram(~b1, data = b1_sim, fill = ~middle(b1, .95))\n```\n\n::: {.cell-output .cell-output-error}\n```\n#> Error in gf_histogram(~b1, data = b1_sim, fill = ~middle(b1, 0.95)): could not find function \"gf_histogram\"\n```\n:::\n:::\n\n\n## Where is our observed value?\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_histogram(~b1, data = b1_sim, fill = ~middle(b1, .95)) %>%\n  gf_vline(xintercept = b1(res))\n```\n\n::: {.cell-output .cell-output-error}\n```\n#> Error in gf_histogram(~b1, data = b1_sim, fill = ~middle(b1, 0.95)) %>% : could not find function \"%>%\"\n```\n:::\n:::\n\n\n# P-Value\n\n## P-Value\n\nThe p-value tells you what is the probability of observing your $b_1$ or something more extreme.\n\n## Visually \n\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_histogram(~b1, data = b1_sim, fill = ~ b1 > b1(res)) %>%\n  gf_vline(xintercept = b1(res))\n```\n\n::: {.cell-output .cell-output-error}\n```\n#> Error in gf_histogram(~b1, data = b1_sim, fill = ~b1 > b1(res)) %>% gf_vline(xintercept = b1(res)): could not find function \"%>%\"\n```\n:::\n:::\n\n\n## 2-Sided P-Value\n\nDue to randomness, there is a possibility of observing the same magnitude of $b_1$, but in the opposite direction; therefore, we must look at both sides.\n\n## Visually 2-Sided P-Value\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngf_histogram(~b1, data = b1_sim, fill = ~ abs(b1) > b1(res)) %>%\n  gf_vline(xintercept = c(-1,1) * b1(res))\n```\n\n::: {.cell-output .cell-output-error}\n```\n#> Error in gf_histogram(~b1, data = b1_sim, fill = ~abs(b1) > b1(res)) %>% : could not find function \"%>%\"\n```\n:::\n:::\n\n\n## Computing the p-value\n\nWe will count how many simulated $b_1$'s are more extreme and divided by the number of simulations plus one.\n\n## Counting How Many are more extreme\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntally(~ b1 > b1(res), data = b1_sim)\n```\n\n::: {.cell-output .cell-output-error}\n```\n#> Error in tally(~b1 > b1(res), data = b1_sim): could not find function \"tally\"\n```\n:::\n\n```{.r .cell-code}\ntally(~ b1 < - b1(res), data = b1_sim)\n```\n\n::: {.cell-output .cell-output-error}\n```\n#> Error in tally(~b1 < -b1(res), data = b1_sim): could not find function \"tally\"\n```\n:::\n:::\n\n\nOR\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntally(~ abs(b1) > b1(res), data = b1_sim)\n```\n\n::: {.cell-output .cell-output-error}\n```\n#> Error in tally(~abs(b1) > b1(res), data = b1_sim): could not find function \"tally\"\n```\n:::\n:::\n\n\n## Computing the p-value\n\n\n::: {.cell}\n::: {.cell-output .cell-output-error}\n```\n#> Error in tally(~abs(b1) > b1(res), data = b1_sim): could not find function \"tally\"\n```\n:::\n:::\n\n\n# Compute Mathematically\n\n## Mathematical Model\n\n$$\nT= \\frac{b_1}{SE(b_1)} \\sim t(n-1)\n$$\n\n## P-Value\n\n$$\n\\mathrm{p} = Pr(t \\ge |T|)\n$$\n\n\n## P-Value\n\n$$\np = 1- \\int_{-T}^T\\frac{\\Gamma(n/2)}{\\sqrt{\\pi(n-1)}\\Gamma(\\frac{n-1}{2})} \\left(1 + \\frac{x^2}{n-1}\\right)^{-n/2}dx\n$$\n\n## Let's have R do it!\n\n\n::: {.cell}\n::: {.cell-output .cell-output-error}\n```\n#> Error in mtcars %>% lm(mpg ~ qsec, data = .) %>% summary(): could not find function \"%>%\"\n```\n:::\n:::\n\n\n## Mathematical compared to Increasing Simulated Number\n\n$$\nP= 0.0171\n$$\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"Sim: 10000\"\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\n#> Error in tally(~abs(b1) > b1(res), data = b1_sim_10000): could not find function \"tally\"\n```\n:::\n:::\n\n\n\n## Mathematical compared to Increasing Simulated Number\n\n$$\nP= 0.0171\n$$\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"Sim: 1000\"\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\n#> Error in tally(~abs(b1) > b1(res), data = b1_sim_1000): could not find function \"tally\"\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"Sim: 10000\"\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\n#> Error in tally(~abs(b1) > b1(res), data = b1_sim_10000): could not find function \"tally\"\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"Sim: 100000\"\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\n#> Error in tally(~abs(b1) > b1(res), data = b1_sim_100000): could not find function \"tally\"\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"Sim: 1000000\"\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\n#> Error in tally(~abs(b1) > b1(res), data = b1_sim_1000000): could not find function \"tally\"\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}